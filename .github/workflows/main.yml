name: Create Release on File Change

on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 3

      - name: Check for file changes
        id: file_changes
        run: |
          if [[ $(git diff --name-only ${{ github.event.before }} ${{ github.event.after }}) == "prod/api.yml" ]]; then
            echo "api_changed=true" >> "$GITHUB_ENV"
          else
            echo "api_changed=false" >> "$GITHUB_ENV"
          fi

      - name: Determine version
        id: determine_version
        if: env.api_changed == 'true'
        run: |
          git fetch --depth=1 origin "+refs/tags/*:refs/tags/*"
          latest_tag=$(git describe --abbrev=0 --tags)
          commit_messages=$(git log --pretty=format:"%s" ${latest_tag}..HEAD)
          release_type="minor"
          if echo "$commit_messages" | grep -E "(^fix|^chore)"; then
            release_type="patch"
          elif echo "$commit_messages" | grep -E "(^feat)"; then
            release_type="major"
          fi
          echo "::set-output name=version::$(semver bump $release_type $latest_tag)"

      - name: Create release
        if: steps.file_changes.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for repo in andrewvrn/release_actions_test_api andrewvrn/release_actions_test_app andrewvrn/release_actions_test_occ andrewvrn/release_actions_test_dli; do
            curl -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/$repo/releases \
              -d '{
                "tag_name": "${{ steps.determine_version.outputs.version }}",
                "name": "Release ${{ steps.determine_version.outputs.version }}",
                "body": "Auto-generated release based on changes in the current repository.",
                "draft": false,
                "prerelease": false
              }'
          done
